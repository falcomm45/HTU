<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


   
   <context:component-scan base-package="kr.or.ddit" use-default-filters="true" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   </context:component-scan>
   
   
	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean id="uploadFolder" class="java.lang.String">
<!-- 		<constructor-arg value="C:\\eGovFrameDev-3.10.0-64bit\\workspace\\HTU\\src\\main\\webapp\\resources\\upload" /> -->
		<!-- 주연파일폴더  -->
<!-- 		<constructor-arg value="C:\\Users\\user\\Desktop\\eGovFrameDev-3.10.0-64bit\\workspace\\HTU\\src\\main\\webapp\\resources\\upload" /> -->
		
		<!-- 정우 파일 폴더 -->
<!-- 		<constructor-arg value="C:\\finalProj\\workspace\\HTU\\src\\main\\webapp\\resources\\upload" /> -->
		<!-- 유빈 파일 폴더 -->
<!-- 		<constructor-arg value="C:/eGovFrameDev310/FINAL_PROJECT/HTU/src/main/webapp/resources/upload" /> -->
		<!-- 조은 파일 폴더 -->
<!-- 		<constructor-arg value="C:/eGovFrameDev310/workspace/HTU/src/main/webapp/resources/upload" /> -->
		<!-- 형택 파일 폴더 -->
<!-- 		<constructor-arg value="C:\\eGovFrameDev-3.10.0-64bit\\workspace3\\HTU\\src\\main\\webapp\\resources\\upload" /> -->
		<constructor-arg value="D:\\study\\eGovFrameDev-3.10.0-64bit\\workspace\\HTU\\src\\main\\webapp\\resources\\upload" />		
		<!-- 김동규 업로드파일 -->
<!-- 		<constructor-arg value="C:\\finalProj\\workspace\\HTU\\src\\main\\webapp\\resources\\upload" /> -->
	</bean>
	
	<bean id="apiKey" class="java.lang.String">
		<constructor-arg value="NCS56A8QFAIFPNKV"/>
	</bean>
	<bean id="apiSecretKey" class="java.lang.String">
		<constructor-arg value="SV2HTUPQS4HU0OKLZWUAQNXAQXC9JGSR"/>
	</bean>

	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource">
		<!--  <property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>-->
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url"
			value="jdbc:log4jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>
		<property name="username" value="team4_202306F"></property>
		<property name="password" value="java"></property>
		
		<property name="initialSize" value="2" /> 
		<property name="maxTotal" value="3" />  
		
		
	</bean>

	<!-- 데이터베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리해주는 sqlSession 객체를 생성 1) dataSource 
		2) 매퍼 xml의 위치 지정. / : src/main/resources/ -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations"
			value="classpath:/sqlmap/**/*_SQL.xml" />
		<property name="configLocation"
			value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	</bean>
	<!-- 데이터베이스에 개별적으로 쿼리를 실행시키는 객체. 이 객체를 통해 query를 실행함 -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 파일업로드 설정 CommonsMultipartResolver multipartResolver = new multipartResolver(); 
		multipartResolver.setMaxUploadSize(10485760); multipartResolver.setDefaultEncoding("UTF-8"); -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 용량 (20MB) -->
		<property name="maxUploadSize" value="20971520" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- 트랜잭션 관리자의 빈을 정의 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	   <tx:attributes>	 
	       <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
	   </tx:attributes>
	</tx:advice>
    
	<aop:config>
		<aop:pointcut id="requiredTx" expression="execution(* kr.or.ddit..*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx" />
	</aop:config>
	
	<!-- 애너테이션 기반의 트랜잭션 제어를 활성화함 aop(Aspect Oritented Programming : 관점 지향 프로그래밍) 
		로(그), 보(안), 트(랜잭션), 에(러) => 스프링에서 알아서 함 -->
	<tx:annotation-driven />

	<!-- Mapper 인터페이스 설정 개발자가 직접 DAO를 설정하지 않아도 자동으로 Mapper 인터페이스를 활용하는 객체를 생성하게 
		됨 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.mapper" />
	</bean>
	
	<!-- 스프링 AOP 활성화 -->
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>

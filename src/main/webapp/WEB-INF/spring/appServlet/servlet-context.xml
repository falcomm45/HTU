<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" 
       xmlns:websocket="http://www.springframework.org/schema/websocket"   
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xmlns:beans="http://www.springframework.org/schema/beans" 
         xmlns:context="http://www.springframework.org/schema/context" 
         xmlns:security="http://www.springframework.org/schema/security" 
         xsi:schemaLocation="http://www.springframework.org/schema/mvc 
         http://www.springframework.org/schema/mvc/spring-mvc.xsd 
         http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans.xsd 
         http://www.springframework.org/schema/context 
         http://www.springframework.org/schema/context/spring-context.xsd 
         http://www.springframework.org/schema/security 
         http://www.springframework.org/schema/security/spring-security-4.2.xsd
         http://www.springframework.org/schema/websocket 
       http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd">

   
   <context:component-scan base-package="kr.or.ddit" use-default-filters="false" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   </context:component-scan>
   
   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
      <beans:property name="order" value="2" />
   </beans:bean>
   
   <!-- Tiles 설정 시작 -->
   <beans:bean id="tilesConfigurer" 
      class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
            <beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
         </beans:list>
      </beans:property>
   </beans:bean>
   <!-- UrlBasedViewResolver tilesViewResolver = new UrlBasedViewResolver(); -->
   <beans:bean id="tilesViewResolver" 
      class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="viewClass" 
      value="org.springframework.web.servlet.view.tiles3.TilesView" />
      <beans:property name="order" value="1" />
   </beans:bean>
   <!-- Tiles 설정 끝 -->
   
   <beans:bean id="echoHandler" class="kr.or.ddit.util.EchoHandler"/>
   
   <websocket:handlers>
      <websocket:mapping handler="echoHandler" path="/echo"/>
      <websocket:handshake-interceptors>
         <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
      </websocket:handshake-interceptors>
      <websocket:sockjs/>
   </websocket:handlers>

   
   <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />
   
</beans:beans>